// Query
// -----
// Include an @media query block for proerty declarations.
//
// $query - { string } - The query for which the property declarations should apply

@mixin query( $query ) {
	@if length($query) == 1 {
		@if map-has-key($BREAKPOINTS, nth($query, 1)) {
			@media (min-width: map-get($BREAKPOINTS, nth($query, 1))) {
				@content;
			}
		} @else if nth($query, 1) == 'hi-res' {
			@media (-webkit-min-device-pixel-ratio: $hi-res-dpi-threshold/96), (min-resolution: $hi-res-dpi-threshold + "dpi") {
				@content;
			}
		} @else {
			@warn "Invalid query passed to 'mq'. Printing @media as-is.";

			@media #{$query} {
				@content;
			}
		}
	} @else {
		@if nth($query, 1) == 'from' {
			@if map-has-key($BREAKPOINTS, nth($query, 2)) and map-has-key($BREAKPOINTS, nth($query, 4)) {
				@media (min-width: map-get($BREAKPOINTS, nth($query, 2))) and (max-width: map-get($BREAKPOINTS, nth($query, 4))) {
					@content;
				}
			} @else {
				@error "Invalid query passed to 'mq'. Tried to use mq(between...) but breakpoint name was invalid.";
			}
		} @else if nth($query, 1) == 'below' {
			@if map-has-key($BREAKPOINTS, nth($query, 2)) {
				@media (max-width: map-get($BREAKPOINTS, nth($query, 2))) {
					@content;
				}
			}
		} @else {
			@warn "Invalid query passed to 'mq'. Printing @media as-is.";

			@media #{$query} {
				@content;
			}
		}
	}
}



// mq
// --
// Alias mixin for `@function query()`.

@mixin mq( $query ) {

	@include query( $query );

}
