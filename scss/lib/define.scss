// Define a new value for a key in the global $SCARAB variable
//
// @param { string } $key			- Name of the key in $SCARAB
// @param { arglist } $definition	- Definition of the new value

@mixin define (
	$definition...
) {

	@if length( $definition ) == 2 {
		$key: to-lower-case( nth( $definition, 1 ) );
		$value: nth( $definition, 2 );

		$SCARAB: map-merge( $SCARAB, ($key: $value) ) !global;
	}

	@if length( $definition ) > 2 {
		$maps: ($SCARAB,);
		$value: nth( $definition, -1 );
		$result: ();

		@for $i from 1 through length( $definition ) - 2 {
			$current-key: nth( $definition, $i );
			$current-map: nth( $maps, -1 );
			$current-value: map-get( $current-map, $current-key );
			$maps: append( $maps, $current-value );
		}

		@for $i from length($maps) through 1 {
			$current-key: nth( $definition, $i );
			$current-map: nth( $maps, $i );
			$current-value: ();

			@if $i == length($maps) {
				$current-value: $value;
			} @else {
				$current-value: $result;
			}

			$result: map-merge( $current-map, ($current-key: $current-value) );
		}

		$SCARAB: map-merge( $SCARAB, $result ) !global;
	}

}
