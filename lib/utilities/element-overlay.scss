// @mixin element-overlay( [$is-active], [$base-color], [$transition-duration], [$levels] )
//
// Add an element overlay to the :root element
//
// @param { boolean } $is-active           - Whether to activate the element overlay
// @param { boolean } $base-color          - Base color of the element overlay
// @param { boolean } $transition-duration - Delay for overlay transitions
// @param { boolean } $levels              - Number of levels deep in the DOM to overlay

@mixin element-overlay( $is-active: true, $base-color: random-color(), $transition-duration: 0.5s, $levels: 20 ) {
	@at-root {
		$selector-base: ' > *';
		$selector: ' > *';

		$attrs: (id, class);

		$content-pre-base: 'â€”';
		$content-pre: '';

		%scarab-element-overlay {
			@for $i from 1 through $levels {
				$background-color: rgba( $base-color, 0.15 );
				$border-color: desaturate( $base-color, 25 );
				$text-color: invert( $border-color );

				&#{ $selector } {
					transition: box-shadow $transition-duration;
					background: $background-color !important;
					user-select: none;
					cursor: crosshair;

					@each $attr in $attrs {
						&[ #{ $attr } ]:before {
							content: $content-pre " #{ $attr }: [ " attr($attr) " ]";
						}
					}

					&:before {
						transition: opacity $transition-duration;
						transition-delay: 0;
						content: $content-pre;
						visibility: hidden;
						opacity: 0;
						width: 100%;
						min-width: 320px;
						position: absolute;
						top: 0;
						left: 0;
						line-height: 2;
						font-family: monospace;
						font-size: 10px;
						font-weight: bold;
						letter-spacing: 0.1em;
						padding: 0.25em 1em;
						background: $border-color;
						color: $text-color;
						z-index: 110000;
						transform: translateY(-100%) translateX(-1px);
					}

					&:hover,
					&:focus,
					&:active {
						position: relative;
						box-shadow: inset 0 0 0 1px $border-color;
					}

					&:focus,
					&:active {
						transition: all $transition-duration;
						box-shadow: 0 0 0 2px $border-color;

						&:before {
							visibility: visible;
							opacity: 1;
							transition-delay: ($i - 1) * $transition-duration;
							margin-left: -1px;
							margin-top: -1px;
						}					
					}
				}

				$base-color: random-color();

				// Recursion
				$selector: $selector-base + $selector;
				$content-pre: $content-pre-base + $content-pre;
			}
		}
	}

	@if $is-active == true {
		@at-root {
			body {
				@extend %scarab-element-overlay;
			}
		}
	}
}
