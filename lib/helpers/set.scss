/// Set a new value for a key in $SCARAB
///
/// @author Kyle Oliveiro
///
/// @access public
/// @group helpers
///
/// @require {variable} SCARAB
///
/// @param {arglist} $definition - Definition of the new value

@mixin set($definition...) {
	@if length($definition) == 2 {
		$key   : to-lower-case(inspect(nth($definition, 1)));
		$value : nth($definition, 2);

		@if type-of($value) == 'map' {
			$value: stringify-keys($value);
		}

		$SCARAB: map-merge(
			$SCARAB,
			($key: $value)
		) !global;
	}

	@if length($definition) > 2 {
		$maps   : ($SCARAB,);
		$value  : nth($definition, -1);
		$result : ();

		@for $i from 1 through length($definition) - 2 {
			$current-key   : to-lower-case(inspect(nth($definition, $i)));
			$current-map   : nth($maps, -1);
			$current-value : map-get($current-map, $current-key) or ();

			$maps: append($maps, $current-value);
		}

		@for $i from length($maps) through 1 {
			$current-key   : to-lower-case(inspect(nth($definition, $i)));
			$current-map   : nth($maps, $i);
			$current-value : ();

			@if $i == length($maps) {
				$current-value: $value;
			} @else {
				$current-value: $result;
			}

			$result: map-merge(
				$current-map,
				($current-key: $current-value)
			);
		}

		$SCARAB: map-merge($SCARAB, $result) !global;
	}
}
