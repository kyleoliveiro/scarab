/// Declare properties within a @media query block
///
/// @author Kyle Oliveiro
///
/// @access public
/// @group helpers
///
/// @require {function} get
///
/// @param {arglist} $query - Description of the media query
///
/// @example
///   @include query( small ) {
///       body {
///           background-color: grey;
///       }
///   }
///   
///   @include query( below medium ) {
///       .navigation {
///           display: none;
///       }
///   }
///   
///   @include query( medium to huge ) {
///       .page-title {
///           font-size: 3rem;
///       }
///   }
///
///   // The above code compiles to the following CSS:
///   
///   @media (min-width: 600px) {
///       body {
///           background-color: grey
///       }
///   }
///   @media (max-width: 1024px) {
///       .navigation {
///           display: none
///       }
///   }
///   @media all and (min-width: 1024px) and (max-width: 1600px) {
///       .page-title {
///           font-size: 3rem
///       }
///   }

@mixin query($query) {
	$condition:   ();
	$breakpoint:  ();
	$media-query: ();

	// e.g. query(small) => @media min-width(get(breakpoints, small)) {}
	@if length($query) == 1 {
		$breakpoint: $query;
		$media-query: '(min-width: #{get(breakpoints, $breakpoint)})';
	}
	
	@else if length($query) == 2 {
		$condition:  nth($query, 1);
		$breakpoint: nth($query, 2);

		// e.g. query(until medium) => @media max-width(get(breakpoints, medium)) {}
		@if $condition == 'until' {
			$media-query: '(max-width: #{get(breakpoints, $breakpoint)})';
		}
		// e.g. query(from small)   => @media min-width(get(breakpoints, small)) {}
		@else if $condition == 'from' {
			$media-query: '(min-width: #{get(breakpoints, $breakpoint)})';
		}
	}

	// e.g. query(small to medium) => @media min-width(get(breakpoints, small)) and max-width(get(breakpoints, medium)) {}
	@else if length($query) == 3 {
		$bp1: nth($query, 1);
		$bp2: nth($query, 3);
		$min-query: get(breakpoints, $bp1);
		$max-query: get(breakpoints, $bp2);

		@if get(breakpoints, $bp1) > get(breakpoints, $bp2) {
			$min-query: get(breakpoints, $bp2);
			$max-query: get(breakpoints, $bp1);
		}

		$media-query: 'all and (min-width: #{$min-query}) and (max-width: #{$max-query})';
	}

	@media #{$media-query} {
		@content;
	}
}
