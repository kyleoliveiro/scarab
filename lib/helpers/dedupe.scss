/// Remove keys from a map which contain duplicate values
///
/// If a map contains key-value pairs with multiple values,
/// the first key in the map is retained, and duplicates are removed.
///
/// @author Kyle Oliveiro
///
/// @access public
/// @group helpers
///
/// @param {string} $map - Name of map to retrieve keys from
/// @param {bool} $dedupe [true] - Whether to dedupe the map before getting keys
/// @return {list}
///
/// @example
///   $colors: (
///     blue:  #0000ff,
///     red:   #ff0000,
///     green: #00ff00,
///     brand: #0000ff
///   );
///
///   @debug dedupe($colors);
///   // (
///   //    blue:  #0000ff,
///   //    red:   #ff0000,
///   //    green: #00ff00
///   // );

@function dedupe($map) {
	$deduped-map : ();
	$indices     : ();
	$values      : map-values($map);

	@each $value in $values {
		$indices: append($indices, index($values, $value));
	}

	$last-index: 0;
	@each $index in $indices {
		@if $index > $last-index {
			$deduped-map: map-merge($deduped-map, (
				nth(nth($map, $index), 1): nth(nth($map, $index), 2)
			) );
		}

		$last-index: $index;
	}

	@return $deduped-map;
}

