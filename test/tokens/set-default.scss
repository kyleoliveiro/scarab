@include describe('set-default [func]') {

  @include it('Sets a new value in the `TOKENS` map') {
    $__SCARAB: (
      'TOKENS': ()
    ) !global;

    $_: set-default(baseline, 2rem);

    @include assert-equal(
      inspect($__SCARAB),
      inspect((
        'TOKENS': (
          'baseline': 2rem
        )
      )),
      'Register value for a key does not exist'
    );



    $__SCARAB: (
      'TOKENS': (
        'baseline': 1rem
      )
    ) !global;

    $_: set-default(baseline, 2rem);

    @include assert-equal(
      inspect($__SCARAB),
      inspect((
        'TOKENS': (
          'baseline': 1rem
        )
      )),
      'Fails to register value for existing keys'
    );



    $__SCARAB: (
      'TOKENS': (
        'palettes': (
          'blue': (
            'light': lightblue,
            'base': blue
          )
        )
      )
    ) !global;

    $_: set-default(palettes, blue, dark, darkblue);

    @include assert-equal(
      inspect($__SCARAB),
      inspect((
        'TOKENS': (
          'palettes': (
            'blue': (
              'light': lightblue,
              'base': blue,
              'dark': darkblue
            )
          )
        )
      )),
      'Register value for a nested key does not exist'
    );



    $__SCARAB: (
      'TOKENS': (
        'palettes': (
          'blue': (
            'light': lightblue,
            'base': blue
          )
        )
      )
    ) !global;

    $_: set-default(palettes, blue, light, skyblue);

    @include assert-equal(
      inspect($__SCARAB),
      inspect((
        'TOKENS': (
          'palettes': (
            'blue': (
              'light': lightblue,
              'base': blue
            )
          )
        )
      )),
      'Fails to register a value for existing nested keys'
    );
  }

}



@include describe('set-default [mixin]') {

  @include it('Sets a new value in the `TOKENS` map') {
    $__SCARAB: (
      'TOKENS': ()
    ) !global;

    @include set-default(baseline, 2rem);

    @include assert-equal(
      inspect($__SCARAB),
      inspect((
        'TOKENS': (
          'baseline': 2rem
        )
      )),
      'Register value for a key does not exist'
    );



    $__SCARAB: (
      'TOKENS': (
        'baseline': 1rem
      )
    ) !global;

    @include set-default(baseline, 2rem);

    @include assert-equal(
      inspect($__SCARAB),
      inspect((
        'TOKENS': (
          'baseline': 1rem
        )
      )),
      'Fails to register value for existing keys'
    );



    $__SCARAB: (
      'TOKENS': (
        'palettes': (
          'blue': (
            'light': lightblue,
            'base': blue
          )
        )
      )
    ) !global;

    @include set-default(palettes, blue, dark, darkblue);

    @include assert-equal(
      inspect($__SCARAB),
      inspect((
        'TOKENS': (
          'palettes': (
            'blue': (
              'light': lightblue,
              'base': blue,
              'dark': darkblue
            )
          )
        )
      )),
      'Register value for a nested key does not exist'
    );



    $__SCARAB: (
      'TOKENS': (
        'palettes': (
          'blue': (
            'light': lightblue,
            'base': blue
          )
        )
      )
    ) !global;

    @include set-default(palettes, blue, light, skyblue);

    @include assert-equal(
      inspect($__SCARAB),
      inspect((
        'TOKENS': (
          'palettes': (
            'blue': (
              'light': lightblue,
              'base': blue
            )
          )
        )
      )),
      'Fails to register a value for existing nested keys'
    );
  }

}
